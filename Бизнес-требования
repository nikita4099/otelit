# Бизнес-требования к разработке машинного обучения

Бизнес-процесс: Машинное обучение работает по принципу запрос-ответ. Из CRM системы поступает запрос с данными о клиенте (признаками для предикта). В ответ система выдаёт ответ 
ответ. По ответу должна иметься возможность отфильтровать значения подбора. 

Возможно на более поздних итерациях потребуется расширить коммуникацию: 
- добавить данные кроме данных клиента;
- предоставить в ответ больше айди;
- кроме айди в ответ дать дополнительные данные.

Скорость на ответ: до 10 секунд.


Описание техники достижения поставленных бизнес-требований: 
Пересчёт показателей делать раз в месяц, так как бизнес-цикл происходит на этом промежутке. 


#### 3.1. Способ оценки пилота  
  
- Краткое описание предполагаемого дизайна и способа оценки пилота `Product Owner`, `Data Scientist` with `AB Group`: отправляем модели батчи из одного лида и всех свободных помещений (Лид-Товар1, Лид-Товар2, Лид-Товар3 и т.д.) и получаем предикты по тому будет ли сделка или нет. Там, где на её взгляд будет - оставляем в подборе. Где точно не будет - убираем.

В будущем: вместо старого "подбора" у менеджера появится всплывающее окно: В нём по умолчанию показывается доска свободных помещений + поле для наполнения товарами, классифициорованных системой как ведущих к сделке. При открытии окна данные о клиенте отправляются в модель. Модель отправляет айди товаров, подходящих клиенту, в интерфесе эти айди открываются в заданном формате. Успешным пиломо будет **Ира: тут не дописано вроде**


> Заполнение раздела 4 требуется не для всех дизайн документов. В некоторых случаях результатом итерации может быть расчет каких-то значений, далее используемых в бизнес-процессе для пилота.  Тут так и есть **Ира: думаю, пока раздел 4 можно просто удалить из документа. Она будет релевантна для следующей итерации проекта**
  
#### 4.1. Архитектура решения   
  
- Блок схема и пояснения: сервисы, назначения, методы API `Data Scientist` : попробуем на Docker сделать. ML как сервис. Через API запросы идут. Но на данном этапе делаем тетрадку юпитера с импортом данных из csv. 
  
#### 4.2. Описание инфраструктуры и масштабируемости 
  
- Какая инфраструктура выбрана и почему `Data Scientist`: надо изучить варианты. Пока никакая
- Плюсы и минусы выбора `Data Scientist` : - 
- Почему финальный выбор лучше других альтернатив `Data Scientist` : - 
  
#### 4.3. Требования к работе системы  
  
- SLA, пропускная способность и задержка `Data Scientist`  : -
  
#### 4.4. Безопасность системы  
  
- Потенциальная уязвимость системы `Data Scientist`  : тут могу сказать, что всё может не заработать из-за того, что данные очень растянуты по времени и в идеале обучение делать не на старых данных, а на срезе данных. Какие были помещения в момент заключения сделки кроме сданного помещения. С точки зрения используемого программного обеспечения или устарения данных, то риски пока оценить сложно, да и возможно не нужно.
  
#### 4.5. Безопасность данных   
  
- Нет ли нарушений GDPR и других законов `Data Scientist`  : нет
  
#### 4.6. Издержки  
  
- Расчетные издержки на работу системы в месяц `Data Scientist` : минимальные. Если используем только открытый код, то кластер у нас есть, его ресурсов должно хватать для пилота
  
#### 4.5. Integration points  
  
- Описание взаимодействия между сервисами (методы API и др.) `Data Scientist` : пока не известно
  
#### 4.6. Риски  
  
- Описание рисков и неопределенностей, которые стоит предусмотреть `Data Scientist` : пока не известно
